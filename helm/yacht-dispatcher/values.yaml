namespace: yacht
# configmaps:
#   yd-configuration:
#     YW_IMAGE: eu.gcr.io/stuttgart-things/yacht-worker:23.0524.1959-0.1.6
#     TEKTON_NAMESPACE: yacht-tekton
#     STATUS_TO_ELASTICSEARCH: "TRUE"
#     ELASTICSEARCH_URL: http://10.100.136.150:9200
#     ELASTICSEARCH_STATUS_INDEX: yacht-worker-status

# secrets:
#   redis-connection:
#     name: redis-connection
#     labels:
#       app: yacht-dispatcher
#     dataType: data
#     secretKVs:
#       REDIS_SERVER: ""
#       REDIS_PORT: ""
#       REDIS_PASSWORD: ""
#       REDIS_QUEUE: ""
deployment:
  name: yacht-dispatcher
  labels:
    app: yacht-dispatcher
  selectorLabels:
    app: yacht-dispatcher
  allowPrivilegeEscalation: "false"
  privileged: "false"
  runAsNonRoot: "false"
  readOnlyRootFilesystem: "true"
  serviceAccount: yacht-dispatcher
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  containers:
    yacht-dispatcher:
      image: eu.gcr.io/stuttgart-things/yacht-dispatcher
      replicaCount: 1
      imagePullPolicy: Always
      tag: 23.0621.1605-0.1.16
      # secretsEnvFrom:
      #   - name: redis-connection
      securityContext:
        capabilities: {}
# RBAC
serviceAccounts:
  yacht-dispatcher:
    labels:
      app: yacht
      module: dispatcher
  yacht-worker:
    labels:
      app: yacht
      module: worker
roles:
  yacht-dispatcher:
    labels:
      app: yacht-dispatcher
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - create
      - apiGroups:
          - "batch"
        resources:
          - jobs
        verbs:
          - get
          - list
          - watch
          - create
  yacht-worker:
    labels:
      app: yacht-worker
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - create
roleBindings:
  yacht-dispatcher:
    labels:
      app: yacht-dispatcher
    roleRef:
      kind: Role
      name: yacht-dispatcher
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: yacht-dispatcher
        namespace: yacht
  yacht-worker:
    labels:
      app: yacht-worker
    roleRef:
      kind: Role
      name: yacht-worker
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: yacht-worker
        namespace: yacht
clusterRoles:
  list-all-namespaces-and-jobs-jd:
    labels:
      app: yacht-dispatcher
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
      - apiGroups:
          - "batch"
        resources:
          - jobs
        verbs:
          - get
          - list
          - patch
          - watch
          - create
  list-all-namespaces-and-jobs-jw:
    labels:
      app: yacht-worker
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
clusterRoleBindings:
  list-all-namespaces-and-jobs-yd:
    roleRef:
      kind: ClusterRole
      name: list-all-namespaces-and-jobs-jd
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: yacht-dispatcher
        namespace: yacht
  tekton-pipelines-controller-cluster-access-yd:
    roleRef:
      kind: ClusterRole
      name: tekton-pipelines-controller-cluster-access-jd
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: yacht-dispatcher
        namespace: yacht
  list-all-namespaces-yw:
    roleRef:
      kind: ClusterRole
      name: list-all-namespaces-jw
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: yacht-worker
        namespace: yacht
