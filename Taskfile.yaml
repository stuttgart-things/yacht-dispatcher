---
version: "3"
vars:
  MODULE: github.com/stuttgart-things/yacht-dispatcher
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  CI_PROJECT_NAME:
    sh: echo ${PWD##*/}
  DATE:
    sh: date +"%y.%m%d.%H%M"
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  MAJOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f1
  MINOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f2
  PATCH:
    sh: git describe --tags --abbrev=0 | cut -d "." -f3
  VERSION:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag

tasks:

  lint:
    desc: Lint code
    cmds:
      - cmd: golangci-lint run
        ignore_error: true

  build-dispatcher:
    desc: Build dispatcher
    deps: [lint]
    cmds:
      - go mod tidy
      - CGO_ENABLED=0
      - GOOS=linux
      - go install -ldflags="-X main.version=v{{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }} -X main.date={{ .DATE }} -X main.commit={{ .GIT_COMMIT }}"

  build-container:
    desc: Build container image
    deps: [build-dispatcher]
    cmds:
      - sudo nerdctl build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .CI_PROJECT_NAME }}:{{ .DATE }} --build-arg VERSION={{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }} --build-arg BUILD_DATE={{ .DATE }} --build-arg COMMIT={{ .GIT_COMMIT }} --build-arg GIT_PAT=${CODEHUB_PAT} .
      - sudo nerdctl push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .CI_PROJECT_NAME }}:{{ .DATE }}

  run:
    desc: Run dispatcher locally
    deps: [build-dispatcher]
    cmds:
      - "{{ .CI_PROJECT_NAME }}"
    env:
      SERVER_PORT: "{{ .LOCAL_SERVER_PORT }}"

  run-container:
    desc: Run container image
    deps: [build-container]
    cmds:
      - sudo nerdctl run -e SERVER_PORT={{ .LOCAL_CONTAINER_SERVER_PORT }} -p {{ .LOCAL_CONTAINER_SERVER_PORT }}:{{ .LOCAL_CONTAINER_SERVER_PORT }}  {{ .REGISTRY }}/{{ .CI_PROJECT_NAME }}/{{ .CI_PROJECT_NAME }}:{{ .DATE }}

  tag:
    desc: commit, push & tag the module
    deps: [lint]
    cmds:
      - go mod tidy
      - git config advice.addIgnoredFile false
      - git pull
      - rm -rf *.log
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push
      - git tag -a {{ .UPDATED_TAG_VERSION }} -m 'updated for stuttgart-things {{.DATE}} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push origin --tags
    vars:
      UPDATED_TAG:
        sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
      UPDATED_TAG_VERSION:
        sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{.UPDATED_TAG}}

  push:
    desc: Commit & push the app
    deps: [build-dispatcher]
    cmds:
      - git pull
      - git config advice.addIgnoredFile false
      - rm -rf *.log
      - git add *
      - |
        echo "Enter COMMIT_MESSAGE:"
        read COMMIT_MESSAGE;
        git commit -am "${COMMIT_MESSAGE} for {{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }}"
      - git push

  package:
    desc: Update Chart.yaml and package archive
    cmds:
      - git add ./helm/*/*
      - "sed -i 's/version: .*/version: {{ .UPDATED_TAG_VERSION }}/g' ./helm/*/Chart.yaml"
      - "sed -i 's/appVersion: .*/appVersion: {{ .UPDATED_TAG_VERSION }}/g' ./helm/*/Chart.yaml"
      - yq e -i '.deployment.containers.manager.tag = "{{ .DATE }}-{{ .UPDATED_TAG_VERSION }}"' ./helm/*/values.yaml
      - helm package ./helm/*/